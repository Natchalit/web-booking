# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Go

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4  # ใช้เวอร์ชันล่าสุดเสมอ

    - name: Set up Go
      uses: actions/setup-go@v4  # ใช้เวอร์ชันล่าสุดเสมอ
      with:
        go-version: '^1.21'  # ใช้เวอร์ชัน Go ล่าสุดที่รองรับ

    - name: Build Golang Application
      run: go build -o web-booking

    - name: Upload Build Artifact
      uses: actions/upload-artifact@v3  # ใช้เวอร์ชันล่าสุดเสมอ
      with:
        name: web-booking
        path: web-booking

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
    - name: Download Build Artifact
      uses: actions/download-artifact@v3  # ใช้เวอร์ชันล่าสุดเสมอ
      with:
        name: web-booking

    - name: Deploy to Ubuntu Server
      env:
        SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
      run: |
        mkdir -p ~/.ssh
        echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa

        # ตั้งค่า SSH เพื่อเข้าถึง Server ของคุณ
        ssh -o StrictHostKeyChecking=no root@117.18.124.154 << 'EOF'
          # นำไฟล์ build ขึ้นไปยัง server
          scp web-booking root@117.18.124.154:/home/root/web-booking

          # หยุดแอปที่กำลังทำงาน (ถ้ามี)
          pkill -f web-booking || true

          # เริ่มต้นแอปใหม่
          nohup /home/root/web-booking > /home/root/app.log 2>&1 &
        EOF